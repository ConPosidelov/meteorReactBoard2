@function parseInt($n) {
  @return $n / ($n * 0 + 1);
}

@mixin rem($property, $values) {
  $px: ();
  $rem: ();

  @each $value in $values {

    @if $value == 0 or $value == auto {
      $px: append($px, $value);
      $rem: append($rem, $value);
    } @else {
      $unit: unit($value);
      $val: parseInt($value);

      @if $unit == "px" {
        $px: append($px, $value);
        $rem: append($rem, ($val / 10 + rem));
      }

      @if $unit == "rem" {
        $px: append($px, ($val * 10 + px));
        $rem: append($rem, $value);
      }
    }
  }

  @if $px == $rem {
    #{$property}: $px;
  } @else {
    #{$property}: $px;
    #{$property}: $rem;
  }
}

@mixin calc($property, $expression) { 
  #{$property}: -webkit-calc(#{$expression}); 
  #{$property}: calc(#{$expression}); 
}


@mixin matrix($scaleX, $scaleY, $translateX, $transition){
     transition: $transition ease-out;
    &:hover{
        -webkit-transform: matrix($scaleX, 0, 0, $scaleY, $translateX, 0);
         transform: matrix($scaleX, 0, 0, $scaleY, $translateX, 0);
         transition: $transition ease-out;
    }
//  @include matrix(1.5, 1.5, 60, 0.4s);
}